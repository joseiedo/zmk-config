/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        Escape {
            bindings = <&kp ESCAPE>;
            key-positions = <1 2>;
        };
    };

    behaviors {
        hm: hm {
            compatible = "zmk,behavior-hold-tap";
            label = "HM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <200>;
            flavor = "tap-preferred";
        };

        ls: ls {
            compatible = "zmk,behavior-hold-tap";
            label = "LS";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <200>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESC    &kp Q               &kp W           &kp F        &kp P             &kp B      &kp J            &kp L              &kp U                &kp Y            &kp SEMI             &kp BSPC
&kp TAB    &hm LEFT_COMMAND A  &hm LEFT_ALT R  &hm LCTRL S  &hm LEFT_SHIFT T  &kp G      &kp M            &hm RIGHT_SHIFT N  &hm RIGHT_CONTROL E  &hm RIGHT_ALT I  &hm RIGHT_COMMAND O  &kp SQT
&kp LSHFT  &kp Z               &kp X           &kp C        &kp D             &kp V      &kp K            &kp H              &kp COMMA            &kp DOT          &kp FSLH             &kp ESC
                                               &mo 4        &ls 3 SPACE       &kp TAB    &ls 1 BACKSPACE  &lt 2 RET          &mo 5
            >;
        };

        config_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp F7  &kp F8  &kp F9  &kp F12  &kp PSCRN    &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2       &bt BT_SEL 3   &bt BT_SEL 4       &trans
&trans  &kp F4  &kp F5  &kp F6  &kp F11  &kp SLCK     &trans        &kp LEFT_SHIFT  &kp RIGHT_CONTROL  &kp RIGHT_ALT  &kp RIGHT_COMMAND  &trans
&trans  &kp F1  &kp F2  &kp F3  &kp F10  &trans       &bt BT_CLR    &studio_unlock  &trans             &trans         &trans             &trans
                        &trans  &trans   &trans       &trans        &trans          &trans
            >;
        };

        symbol_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp SQT            &kp LESS_THAN  &kp GREATER_THAN  &kp GRAVE  &trans       &kp AMPERSAND  &kp TILDE   &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PERCENT    &kp BSPC
&kp LCTRL  &kp EXCLAMATION    &kp MINUS      &kp PLUS          &kp EQUAL  &kp POUND    &kp PIPE       &kp COLON   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SEMICOLON  &kp GRAVE
&kp LSHFT  &kp DOUBLE_QUOTES  &kp SLASH      &kp ASTERISK      &kp BSLH   &kp DOT      &kp UNDER      &kp DOLLAR  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp AT_SIGN    &kp TILDE
                                             &kp LGUI          &trans     &kp SPACE    &kp RET        &trans      &kp RALT
            >;
        };

        number_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp N7  &kp N8  &kp N9  &kp FSLH      &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp N4  &kp N5  &kp N6  &kp ASTERISK  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp N1  &kp N2  &kp N3  &kp EQUAL     &trans
                        &trans  &trans  &trans    &trans  &kp N0  &trans
            >;
        };

        nav_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp N7    &kp N8     &kp N9  &kp FSLH   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp LEFT  &kp DOWN   &kp UP  &kp RIGHT  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp INS   &kp DEL    &trans  &trans     &trans
                        &trans  &trans  &trans    &trans  &trans    &kp K_APP
            >;
        };

        multimedia_layer {
            bindings = <
&trans  &trans  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_MUTE      &trans    &trans  &trans  &trans  &trans  &kp C_RESET  &trans
&trans  &trans  &kp C_BRI_DN  &kp C_BRI_UP  &kp C_BRI_AUTO  &trans    &trans  &trans  &trans  &trans  &trans       &trans
&trans  &trans  &kp C_PAUSE   &kp C_PLAY    &kp C_STOP      &trans    &trans  &trans  &trans  &trans  &trans       &trans
                              &trans        &trans          &trans    &trans  &trans  &trans
            >;
        };
    };
};
